/* Generated by Yosys 0.9 (git sha1 1979e0b) */

(* top =  1  *)
(* src = "controlador.v:1" *)
module controlador_estacionamiento(clk, rst, sensor_vehicule, sensor_moved_vehicule, password_input, open_gate, close_gate, alarm_wrong_pin, alarm_blocked);
  (* src = "controlador.v:86" *)
  wire _000_;
  (* src = "controlador.v:86" *)
  wire _001_;
  (* src = "controlador.v:86" *)
  wire _002_;
  (* src = "controlador.v:86" *)
  wire [2:0] _003_;
  (* src = "controlador.v:86" *)
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  (* src = "controlador.v:11" *)
  output alarm_blocked;
  (* src = "controlador.v:10" *)
  output alarm_wrong_pin;
  (* src = "controlador.v:2" *)
  input clk;
  (* src = "controlador.v:9" *)
  output close_gate;
  (* src = "controlador.v:26" *)
  wire [2:0] counter;
  (* src = "controlador.v:8" *)
  output open_gate;
  (* src = "controlador.v:7" *)
  input [15:0] password_input;
  (* src = "controlador.v:3" *)
  input rst;
  (* src = "controlador.v:5" *)
  input sensor_moved_vehicule;
  (* src = "controlador.v:4" *)
  input sensor_vehicule;
  (* onehot = 32'd1 *)
  wire [6:0] state;
  NOT _083_ (
    .A(rst),
    .Y(_035_)
  );
  NOT _084_ (
    .A(state[5]),
    .Y(_036_)
  );
  NOT _085_ (
    .A(sensor_moved_vehicule),
    .Y(_037_)
  );
  NOT _086_ (
    .A(sensor_vehicule),
    .Y(_038_)
  );
  NOT _087_ (
    .A(alarm_wrong_pin),
    .Y(_039_)
  );
  NOT _088_ (
    .A(counter[0]),
    .Y(_040_)
  );
  NOT _089_ (
    .A(counter[2]),
    .Y(_041_)
  );
  NOT _090_ (
    .A(state[2]),
    .Y(_042_)
  );
  NOT _091_ (
    .A(state[4]),
    .Y(_043_)
  );
  NAND _092_ (
    .A(_035_),
    .B(state[6]),
    .Y(_044_)
  );
  NOR _093_ (
    .A(sensor_moved_vehicule),
    .B(_044_),
    .Y(_045_)
  );
  NOT _094_ (
    .A(_045_),
    .Y(_046_)
  );
  NOR _095_ (
    .A(rst),
    .B(_042_),
    .Y(_047_)
  );
  NAND _096_ (
    .A(_035_),
    .B(state[2]),
    .Y(_048_)
  );
  NOR _097_ (
    .A(password_input[11]),
    .B(password_input[14]),
    .Y(_049_)
  );
  NOR _098_ (
    .A(password_input[15]),
    .B(password_input[1]),
    .Y(_050_)
  );
  NAND _099_ (
    .A(_049_),
    .B(_050_),
    .Y(_051_)
  );
  NOR _100_ (
    .A(password_input[2]),
    .B(password_input[3]),
    .Y(_052_)
  );
  NOR _101_ (
    .A(password_input[4]),
    .B(password_input[7]),
    .Y(_053_)
  );
  NAND _102_ (
    .A(_052_),
    .B(_053_),
    .Y(_054_)
  );
  NOR _103_ (
    .A(_051_),
    .B(_054_),
    .Y(_055_)
  );
  NOT _104_ (
    .A(_055_),
    .Y(_056_)
  );
  NAND _105_ (
    .A(password_input[9]),
    .B(password_input[10]),
    .Y(_057_)
  );
  NAND _106_ (
    .A(password_input[12]),
    .B(password_input[13]),
    .Y(_058_)
  );
  NOR _107_ (
    .A(_057_),
    .B(_058_),
    .Y(_059_)
  );
  NAND _108_ (
    .A(password_input[0]),
    .B(password_input[5]),
    .Y(_060_)
  );
  NAND _109_ (
    .A(password_input[6]),
    .B(password_input[8]),
    .Y(_061_)
  );
  NOR _110_ (
    .A(_060_),
    .B(_061_),
    .Y(_062_)
  );
  NAND _111_ (
    .A(_059_),
    .B(_062_),
    .Y(_063_)
  );
  NOR _112_ (
    .A(_056_),
    .B(_063_),
    .Y(_064_)
  );
  NAND _113_ (
    .A(_047_),
    .B(_064_),
    .Y(_065_)
  );
  NAND _114_ (
    .A(_046_),
    .B(_065_),
    .Y(_011_)
  );
  NAND _115_ (
    .A(state[0]),
    .B(sensor_vehicule),
    .Y(_066_)
  );
  NAND _116_ (
    .A(counter[1]),
    .B(counter[0]),
    .Y(_067_)
  );
  NOT _117_ (
    .A(_067_),
    .Y(_068_)
  );
  NOR _118_ (
    .A(counter[2]),
    .B(_068_),
    .Y(_069_)
  );
  NAND _119_ (
    .A(_041_),
    .B(_067_),
    .Y(_070_)
  );
  NAND _120_ (
    .A(state[5]),
    .B(_069_),
    .Y(_071_)
  );
  NAND _121_ (
    .A(_066_),
    .B(_071_),
    .Y(_072_)
  );
  NOT _122_ (
    .A(_072_),
    .Y(_073_)
  );
  NOR _123_ (
    .A(rst),
    .B(_073_),
    .Y(_010_)
  );
  NOR _124_ (
    .A(_036_),
    .B(_069_),
    .Y(_074_)
  );
  NAND _125_ (
    .A(state[5]),
    .B(_070_),
    .Y(_075_)
  );
  NOR _126_ (
    .A(state[3]),
    .B(_074_),
    .Y(_076_)
  );
  NOR _127_ (
    .A(rst),
    .B(_076_),
    .Y(_009_)
  );
  NAND _128_ (
    .A(state[0]),
    .B(_038_),
    .Y(_077_)
  );
  NOR _129_ (
    .A(rst),
    .B(state[1]),
    .Y(_078_)
  );
  NAND _130_ (
    .A(_077_),
    .B(_078_),
    .Y(_008_)
  );
  NOR _131_ (
    .A(state[0]),
    .B(state[5]),
    .Y(_079_)
  );
  NOR _132_ (
    .A(_040_),
    .B(_079_),
    .Y(_080_)
  );
  NAND _133_ (
    .A(_036_),
    .B(_040_),
    .Y(_081_)
  );
  NAND _134_ (
    .A(_035_),
    .B(_081_),
    .Y(_082_)
  );
  NOR _135_ (
    .A(_080_),
    .B(_082_),
    .Y(_003_[0])
  );
  NAND _136_ (
    .A(counter[1]),
    .B(_079_),
    .Y(_012_)
  );
  NAND _137_ (
    .A(state[5]),
    .B(_067_),
    .Y(_013_)
  );
  NAND _138_ (
    .A(_012_),
    .B(_013_),
    .Y(_014_)
  );
  NOR _139_ (
    .A(counter[1]),
    .B(counter[0]),
    .Y(_015_)
  );
  NAND _140_ (
    .A(_035_),
    .B(_014_),
    .Y(_016_)
  );
  NOR _141_ (
    .A(_015_),
    .B(_016_),
    .Y(_003_[1])
  );
  NAND _142_ (
    .A(counter[2]),
    .B(_079_),
    .Y(_017_)
  );
  NOT _143_ (
    .A(_017_),
    .Y(_018_)
  );
  NOR _144_ (
    .A(_041_),
    .B(_067_),
    .Y(_019_)
  );
  NOR _145_ (
    .A(_075_),
    .B(_019_),
    .Y(_020_)
  );
  NOR _146_ (
    .A(_018_),
    .B(_020_),
    .Y(_021_)
  );
  NOR _147_ (
    .A(rst),
    .B(_021_),
    .Y(_003_[2])
  );
  NOR _148_ (
    .A(state[0]),
    .B(state[6]),
    .Y(_022_)
  );
  NAND _149_ (
    .A(_078_),
    .B(_022_),
    .Y(_023_)
  );
  NOT _150_ (
    .A(_023_),
    .Y(_024_)
  );
  NAND _151_ (
    .A(open_gate),
    .B(_024_),
    .Y(_025_)
  );
  NAND _152_ (
    .A(_044_),
    .B(_025_),
    .Y(_004_)
  );
  NAND _153_ (
    .A(alarm_blocked),
    .B(_022_),
    .Y(_026_)
  );
  NOT _154_ (
    .A(_026_),
    .Y(_027_)
  );
  NOR _155_ (
    .A(state[3]),
    .B(_027_),
    .Y(_028_)
  );
  NOR _156_ (
    .A(rst),
    .B(_028_),
    .Y(_000_)
  );
  NOR _157_ (
    .A(state[5]),
    .B(_022_),
    .Y(_029_)
  );
  NOR _158_ (
    .A(_039_),
    .B(_029_),
    .Y(_030_)
  );
  NOR _159_ (
    .A(_074_),
    .B(_030_),
    .Y(_031_)
  );
  NOR _160_ (
    .A(rst),
    .B(_031_),
    .Y(_001_)
  );
  NAND _161_ (
    .A(close_gate),
    .B(_022_),
    .Y(_032_)
  );
  NOT _162_ (
    .A(_032_),
    .Y(_033_)
  );
  NOR _163_ (
    .A(state[1]),
    .B(_033_),
    .Y(_034_)
  );
  NOR _164_ (
    .A(rst),
    .B(_034_),
    .Y(_002_)
  );
  NOR _165_ (
    .A(_037_),
    .B(_044_),
    .Y(_005_)
  );
  NOR _166_ (
    .A(_048_),
    .B(_064_),
    .Y(_007_)
  );
  NOR _167_ (
    .A(rst),
    .B(_043_),
    .Y(_006_)
  );
  DFF _168_ (
    .C(clk),
    .D(_008_),
    .Q(state[0])
  );
  DFF _169_ (
    .C(clk),
    .D(_005_),
    .Q(state[1])
  );
  DFF _170_ (
    .C(clk),
    .D(_006_),
    .Q(state[2])
  );
  DFF _171_ (
    .C(clk),
    .D(_009_),
    .Q(state[3])
  );
  DFF _172_ (
    .C(clk),
    .D(_010_),
    .Q(state[4])
  );
  DFF _173_ (
    .C(clk),
    .D(_007_),
    .Q(state[5])
  );
  DFF _174_ (
    .C(clk),
    .D(_011_),
    .Q(state[6])
  );
  (* src = "controlador.v:86" *)
  DFF _175_ (
    .C(clk),
    .D(_002_),
    .Q(close_gate)
  );
  (* src = "controlador.v:86" *)
  DFF _176_ (
    .C(clk),
    .D(_001_),
    .Q(alarm_wrong_pin)
  );
  (* src = "controlador.v:86" *)
  DFF _177_ (
    .C(clk),
    .D(_000_),
    .Q(alarm_blocked)
  );
  (* src = "controlador.v:86" *)
  DFF _178_ (
    .C(clk),
    .D(_004_),
    .Q(open_gate)
  );
  (* src = "controlador.v:86" *)
  DFF _179_ (
    .C(clk),
    .D(_003_[0]),
    .Q(counter[0])
  );
  (* src = "controlador.v:86" *)
  DFF _180_ (
    .C(clk),
    .D(_003_[1]),
    .Q(counter[1])
  );
  (* src = "controlador.v:86" *)
  DFF _181_ (
    .C(clk),
    .D(_003_[2]),
    .Q(counter[2])
  );
endmodule
